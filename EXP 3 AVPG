EXP 3
% DB


f=@(c)((9.81*65)/c)*(1-exp((-10*c)/65))-40;
es=0.0001;
c(1)=12;
c(2)=13;
fprintf('Iteration              new root                Absolute error\n');
for i=2:500
    c(i+1)=c(i)-(f(c(i))*(c(i)-c(i-1))/(f(c(i))-f(c(i-1))));
    ea=abs((c(i+1)-c(i))/c(i+1))*100;
    q(i-1)=i-1;
    s(i-1)=ea;
    fprintf('%f               %f                %f\n',i-1,c(i),ea);
    if ea<=es
        ex=i;
        break
    end
end
plot(q,s)
hold on 
    plot (c(i), 0, '*r')
hold off 
fprintf('\n The obtained drag coefficient is %f kg/s. The result is obtained after %f iterations \n',c(i),(i-1));

f = @(c)((9.81*65)/c)*(1-exp((-10*c)/65))-40;
es = 0.0001; 
c(1) = 12;
c(2) = 13;

it = [];
root = [];
err = [];

for i = 2:500
    c(i+1) = c(i) - (f(c(i)) * (c(i)-c(i-1))) / (f(c(i)) - f(c(i-1)));
    ea = abs((c(i+1) - c(i)) / c(i+1)) * 100;
    it(end+1) = i-1; 
    root(end+1) = c(i);
    err(end+1) = ea;
    if ea <= es
        ex = i;
        break
    end
end

T = table(it.', root.', err.', ...
    'VariableNames', {'Iteration', 'New Root', 'Absolute Error'});
disp(T);


plot(it, err, '-o')
hold on
plot(c(ex), 0, '*r')
hold off
xlabel('Iteration')
ylabel('Absolute Error (%)')
title('Convergence of Newton''s Method for Drag Coefficient')
grid on

